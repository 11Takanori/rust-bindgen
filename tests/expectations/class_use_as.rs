/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


/**
 * <div rustbindgen="true" replaces="whatever"></div>
 */
#[repr(C)]
#[derive(Debug, Copy)]
pub struct Struct_whatever {
    pub replacement: ::std::os::raw::c_int,
}
impl ::std::clone::Clone for Struct_whatever {
    fn clone(&self) -> Self { *self }
}
#[test]
fn bindgen_test_layout_Struct_whatever() {
    assert_eq!(::std::mem::size_of::<Struct_whatever>() , 4usize);
    assert_eq!(::std::mem::align_of::<Struct_whatever>() , 4usize);
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct Struct_container {
    pub c: Struct_whatever,
}
impl ::std::clone::Clone for Struct_container {
    fn clone(&self) -> Self { *self }
}
#[test]
fn bindgen_test_layout_Struct_container() {
    assert_eq!(::std::mem::size_of::<Struct_container>() , 4usize);
    assert_eq!(::std::mem::align_of::<Struct_container>() , 4usize);
}
