/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


pub const match_: _bindgen_ty_bindgen_id_1 = _bindgen_ty_bindgen_id_1::match_;
pub const whatever_else: _bindgen_ty_bindgen_id_1 =
    _bindgen_ty_bindgen_id_1::whatever_else;
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum _bindgen_ty_bindgen_id_1 { match_ = 0, whatever_else = 1, }
#[repr(C)]
pub struct bindgen_vtable__bindgen_id_4 {
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct C {
    pub vtable_: *const bindgen_vtable__bindgen_id_4,
    pub i: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_C() {
    assert_eq!(::std::mem::size_of::<C>() , 16usize);
    assert_eq!(::std::mem::align_of::<C>() , 8usize);
}
impl Clone for C {
    fn clone(&self) -> Self { *self }
}
